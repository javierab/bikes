//
// Generated file, do not edit! Created by opp_msgc 4.4 from veins/modules/application/platooning/messages/ManeuverMessage.msg.
//

#ifndef _MANEUVERMESSAGE_M_H_
#define _MANEUVERMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>veins/modules/application/platooning/messages/ManeuverMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet ManeuverMessage {
 * 	
 * 	int vehicleId;
 * 	
 * 	int platoonId;
 * 	
 * 	int messageType;
 * 	
 * 	double platoonSpeed;
 * 	
 * 	int platoonLane;
 * 	
 * 	int frontVehicleId;
 * 	
 * 	int followerVehicleId;
 * 	
 * 	int platoonFormation[];
 * }
 * </pre>
 */
class ManeuverMessage : public ::cPacket
{
  protected:
    int vehicleId_var;
    int platoonId_var;
    int messageType_var;
    double platoonSpeed_var;
    int platoonLane_var;
    int frontVehicleId_var;
    int followerVehicleId_var;
    int *platoonFormation_var; // array ptr
    unsigned int platoonFormation_arraysize;

  private:
    void copy(const ManeuverMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ManeuverMessage&);

  public:
    ManeuverMessage(const char *name=NULL, int kind=0);
    ManeuverMessage(const ManeuverMessage& other);
    virtual ~ManeuverMessage();
    ManeuverMessage& operator=(const ManeuverMessage& other);
    virtual ManeuverMessage *dup() const {return new ManeuverMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getVehicleId() const;
    virtual void setVehicleId(int vehicleId);
    virtual int getPlatoonId() const;
    virtual void setPlatoonId(int platoonId);
    virtual int getMessageType() const;
    virtual void setMessageType(int messageType);
    virtual double getPlatoonSpeed() const;
    virtual void setPlatoonSpeed(double platoonSpeed);
    virtual int getPlatoonLane() const;
    virtual void setPlatoonLane(int platoonLane);
    virtual int getFrontVehicleId() const;
    virtual void setFrontVehicleId(int frontVehicleId);
    virtual int getFollowerVehicleId() const;
    virtual void setFollowerVehicleId(int followerVehicleId);
    virtual void setPlatoonFormationArraySize(unsigned int size);
    virtual unsigned int getPlatoonFormationArraySize() const;
    virtual int getPlatoonFormation(unsigned int k) const;
    virtual void setPlatoonFormation(unsigned int k, int platoonFormation);
};

inline void doPacking(cCommBuffer *b, ManeuverMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, ManeuverMessage& obj) {obj.parsimUnpack(b);}


#endif // _MANEUVERMESSAGE_M_H_
